import numpy as np

# -------------------------------
# 1. جمع و ضرب ماتریس‌ها
# -------------------------------
A = np.array([[1, 2],
              [3, 4]])
B = np.array([[2, 0],
              [1, 3]])

print("1) جمع و ضرب ماتریس‌ها")
print("A+B =\n", A + B)
print("AB =\n", A @ B)
print("BA =\n", B @ A)
print("-" * 40)

# -------------------------------
# 2. دترمینان
# -------------------------------
C = np.array([[2, -1, 0],
              [1, 3, 4],
              [0, 2, 5]])

detC = np.linalg.det(C)
print("2) دترمینان")
print("det(C) =", round(detC, 2))  # گرد شده به 2 رقم اعشار
print("-" * 40)

# -------------------------------
# 3. وارون ماتریس
# -------------------------------
D = np.array([[4, 7],
              [2, 6]])

detD = np.linalg.det(D)
print("3) وارون ماتریس")
if detD != 0:
    D_inv = np.linalg.inv(D)
    print("D^-1 =\n", np.round(D_inv, 2))
else:
    print("این ماتریس وارون ندارد")
print("-" * 40)

# -------------------------------
# 4. رده (Rank)
# -------------------------------
E = np.array([[1, 2, 3],
              [2, 4, 6],
              [3, 6, 9]])

rankE = np.linalg.matrix_rank(E)
print("4) رده ماتریس")
print("rank(E) =", rankE)
print("-" * 40)

# -------------------------------
# 5. حل دستگاه معادلات
# -------------------------------
A_sys = np.array([[1, 1, 1],
                  [2, -1, 1],
                  [1, 2, -1]])
b_sys = np.array([6, 3, 3])

x_sol = np.linalg.solve(A_sys, b_sys)
print("5) حل دستگاه")
print("(x, y, z) =", np.round(x_sol, 2))
print("-" * 40)

# -------------------------------
# 6. مقادیر ویژه و بردارویژه
# -------------------------------
F = np.array([[2, 1],
              [1, 2]])

eigvals, eigvecs = np.linalg.eig(F)
print("6) مقادیر و بردارهای ویژه")
print("مقادیر ویژه:", np.round(eigvals, 2))
print("بردارهای ویژه:\n", np.round(eigvecs, 2))
print("-" * 40)
